// Code generated by go-swagger; DO NOT EDIT.

package genomic_annotations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"

	"github.com/ldsec/medco-connector/restapi/models"
)

// GetValuesHandlerFunc turns a function with the right signature into a get values handler
type GetValuesHandlerFunc func(GetValuesParams, *models.User) middleware.Responder

// Handle executing the request and returning a response
func (fn GetValuesHandlerFunc) Handle(params GetValuesParams, principal *models.User) middleware.Responder {
	return fn(params, principal)
}

// GetValuesHandler interface for that can handle valid get values params
type GetValuesHandler interface {
	Handle(GetValuesParams, *models.User) middleware.Responder
}

// NewGetValues creates a new http.Handler for the get values operation
func NewGetValues(ctx *middleware.Context, handler GetValuesHandler) *GetValues {
	return &GetValues{Context: ctx, Handler: handler}
}

/*GetValues swagger:route GET /genomic-annotations/{annotation} genomic-annotations getValues

Get genomic annotations values.

*/
type GetValues struct {
	Context *middleware.Context
	Handler GetValuesHandler
}

func (o *GetValues) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetValuesParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal *models.User
	if uprinc != nil {
		principal = uprinc.(*models.User) // this is really a models.User, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetValuesDefaultBody get values default body
// swagger:model GetValuesDefaultBody
type GetValuesDefaultBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get values default body
func (o *GetValuesDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetValuesDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetValuesDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetValuesDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
