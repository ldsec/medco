// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExploreQuery MedCo-Explore query
// swagger:model exploreQuery
type ExploreQuery struct {

	// differential privacy
	DifferentialPrivacy *ExploreQueryDifferentialPrivacy `json:"differentialPrivacy,omitempty"`

	// panels
	Panels ExploreQueryPanels `json:"panels,omitempty"`

	// type
	Type ExploreQueryType `json:"type,omitempty"`

	// user public key
	// Pattern: ^[\w=-]+$
	UserPublicKey string `json:"userPublicKey,omitempty"`
}

// Validate validates this explore query
func (m *ExploreQuery) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDifferentialPrivacy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePanels(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserPublicKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExploreQuery) validateDifferentialPrivacy(formats strfmt.Registry) error {

	if swag.IsZero(m.DifferentialPrivacy) { // not required
		return nil
	}

	if m.DifferentialPrivacy != nil {
		if err := m.DifferentialPrivacy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("differentialPrivacy")
			}
			return err
		}
	}

	return nil
}

func (m *ExploreQuery) validatePanels(formats strfmt.Registry) error {

	if swag.IsZero(m.Panels) { // not required
		return nil
	}

	if err := m.Panels.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("panels")
		}
		return err
	}

	return nil
}

func (m *ExploreQuery) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	if err := m.Type.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("type")
		}
		return err
	}

	return nil
}

func (m *ExploreQuery) validateUserPublicKey(formats strfmt.Registry) error {

	if swag.IsZero(m.UserPublicKey) { // not required
		return nil
	}

	if err := validate.Pattern("userPublicKey", "body", string(m.UserPublicKey), `^[\w=-]+$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExploreQuery) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExploreQuery) UnmarshalBinary(b []byte) error {
	var res ExploreQuery
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// ExploreQueryDifferentialPrivacy differential privacy query parameters (todo)
// swagger:model ExploreQueryDifferentialPrivacy
type ExploreQueryDifferentialPrivacy struct {

	// query budget
	// Maximum: 0
	// Minimum: 0
	QueryBudget *float64 `json:"queryBudget,omitempty"`
}

// Validate validates this explore query differential privacy
func (m *ExploreQueryDifferentialPrivacy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateQueryBudget(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExploreQueryDifferentialPrivacy) validateQueryBudget(formats strfmt.Registry) error {

	if swag.IsZero(m.QueryBudget) { // not required
		return nil
	}

	if err := validate.Minimum("differentialPrivacy"+"."+"queryBudget", "body", float64(*m.QueryBudget), 0, false); err != nil {
		return err
	}

	if err := validate.Maximum("differentialPrivacy"+"."+"queryBudget", "body", float64(*m.QueryBudget), 0, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExploreQueryDifferentialPrivacy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExploreQueryDifferentialPrivacy) UnmarshalBinary(b []byte) error {
	var res ExploreQueryDifferentialPrivacy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
