// Code generated by go-swagger; DO NOT EDIT.

package genomic_annotations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetVariantsParams creates a new GetVariantsParams object
// with the default values initialized.
func NewGetVariantsParams() *GetVariantsParams {
	var (
		encryptedDefault = bool(true)
	)
	return &GetVariantsParams{
		Encrypted: &encryptedDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetVariantsParamsWithTimeout creates a new GetVariantsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetVariantsParamsWithTimeout(timeout time.Duration) *GetVariantsParams {
	var (
		encryptedDefault = bool(true)
	)
	return &GetVariantsParams{
		Encrypted: &encryptedDefault,

		timeout: timeout,
	}
}

// NewGetVariantsParamsWithContext creates a new GetVariantsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetVariantsParamsWithContext(ctx context.Context) *GetVariantsParams {
	var (
		encryptedDefault = bool(true)
	)
	return &GetVariantsParams{
		Encrypted: &encryptedDefault,

		Context: ctx,
	}
}

// NewGetVariantsParamsWithHTTPClient creates a new GetVariantsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetVariantsParamsWithHTTPClient(client *http.Client) *GetVariantsParams {
	var (
		encryptedDefault = bool(true)
	)
	return &GetVariantsParams{
		Encrypted:  &encryptedDefault,
		HTTPClient: client,
	}
}

/*GetVariantsParams contains all the parameters to send to the API endpoint
for the get variants operation typically these are written to a http.Request
*/
type GetVariantsParams struct {

	/*Annotation
	  Genomic annotation name.

	*/
	Annotation string
	/*Encrypted
	  Request pre-encrypted variant identifiers (defaults to true).

	*/
	Encrypted *bool
	/*Value
	  Genomic annotation value.

	*/
	Value string
	/*Zygosity
	  Genomic annotation zygosity, if null defaults to all.

	*/
	Zygosity []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get variants params
func (o *GetVariantsParams) WithTimeout(timeout time.Duration) *GetVariantsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get variants params
func (o *GetVariantsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get variants params
func (o *GetVariantsParams) WithContext(ctx context.Context) *GetVariantsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get variants params
func (o *GetVariantsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get variants params
func (o *GetVariantsParams) WithHTTPClient(client *http.Client) *GetVariantsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get variants params
func (o *GetVariantsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAnnotation adds the annotation to the get variants params
func (o *GetVariantsParams) WithAnnotation(annotation string) *GetVariantsParams {
	o.SetAnnotation(annotation)
	return o
}

// SetAnnotation adds the annotation to the get variants params
func (o *GetVariantsParams) SetAnnotation(annotation string) {
	o.Annotation = annotation
}

// WithEncrypted adds the encrypted to the get variants params
func (o *GetVariantsParams) WithEncrypted(encrypted *bool) *GetVariantsParams {
	o.SetEncrypted(encrypted)
	return o
}

// SetEncrypted adds the encrypted to the get variants params
func (o *GetVariantsParams) SetEncrypted(encrypted *bool) {
	o.Encrypted = encrypted
}

// WithValue adds the value to the get variants params
func (o *GetVariantsParams) WithValue(value string) *GetVariantsParams {
	o.SetValue(value)
	return o
}

// SetValue adds the value to the get variants params
func (o *GetVariantsParams) SetValue(value string) {
	o.Value = value
}

// WithZygosity adds the zygosity to the get variants params
func (o *GetVariantsParams) WithZygosity(zygosity []string) *GetVariantsParams {
	o.SetZygosity(zygosity)
	return o
}

// SetZygosity adds the zygosity to the get variants params
func (o *GetVariantsParams) SetZygosity(zygosity []string) {
	o.Zygosity = zygosity
}

// WriteToRequest writes these params to a swagger request
func (o *GetVariantsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param annotation
	if err := r.SetPathParam("annotation", o.Annotation); err != nil {
		return err
	}

	if o.Encrypted != nil {

		// query param encrypted
		var qrEncrypted bool
		if o.Encrypted != nil {
			qrEncrypted = *o.Encrypted
		}
		qEncrypted := swag.FormatBool(qrEncrypted)
		if qEncrypted != "" {
			if err := r.SetQueryParam("encrypted", qEncrypted); err != nil {
				return err
			}
		}

	}

	// path param value
	if err := r.SetPathParam("value", o.Value); err != nil {
		return err
	}

	valuesZygosity := o.Zygosity

	joinedZygosity := swag.JoinByFormat(valuesZygosity, "")
	// query array param zygosity
	if err := r.SetQueryParam("zygosity", joinedZygosity...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
