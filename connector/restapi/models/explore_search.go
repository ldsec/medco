// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ExploreSearch explore search
//
// swagger:model exploreSearch
type ExploreSearch struct {

	// Maximum number of returned ontology elements.
	Limit int64 `json:"limit,omitempty"`

	// String to search for in concepts and modifiers paths.
	// Required: true
	SearchString *string `json:"searchString"`
}

func (m *ExploreSearch) UnmarshalJSON(b []byte) error {
	type ExploreSearchAlias ExploreSearch
	var t ExploreSearchAlias
	if err := json.Unmarshal([]byte("{\"limit\":10,\"searchString\":\"\"}"), &t); err != nil {
		return err
	}
	if err := json.Unmarshal(b, &t); err != nil {
		return err
	}
	*m = ExploreSearch(t)
	return nil
}

// Validate validates this explore search
func (m *ExploreSearch) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSearchString(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ExploreSearch) validateSearchString(formats strfmt.Registry) error {

	if err := validate.Required("searchString", "body", m.SearchString); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ExploreSearch) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ExploreSearch) UnmarshalBinary(b []byte) error {
	var res ExploreSearch
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
