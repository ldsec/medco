// Code generated by go-swagger; DO NOT EDIT.

package medco_node

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/ldsec/medco/connector/restapi/models"
)

// PostCohortsPatientListReader is a Reader for the PostCohortsPatientList structure.
type PostCohortsPatientListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCohortsPatientListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostCohortsPatientListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPostCohortsPatientListForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostCohortsPatientListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostCohortsPatientListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostCohortsPatientListOK creates a PostCohortsPatientListOK with default headers values
func NewPostCohortsPatientListOK() *PostCohortsPatientListOK {
	return &PostCohortsPatientListOK{}
}

/*PostCohortsPatientListOK handles this case with default header values.

Queried patient list
*/
type PostCohortsPatientListOK struct {
	Payload *PostCohortsPatientListOKBody
}

func (o *PostCohortsPatientListOK) Error() string {
	return fmt.Sprintf("[POST /node/explore/cohorts/patient-list][%d] postCohortsPatientListOK  %+v", 200, o.Payload)
}

func (o *PostCohortsPatientListOK) GetPayload() *PostCohortsPatientListOKBody {
	return o.Payload
}

func (o *PostCohortsPatientListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostCohortsPatientListOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCohortsPatientListForbidden creates a PostCohortsPatientListForbidden with default headers values
func NewPostCohortsPatientListForbidden() *PostCohortsPatientListForbidden {
	return &PostCohortsPatientListForbidden{}
}

/*PostCohortsPatientListForbidden handles this case with default header values.

Request is valid and user is authenticated, but not authorized to perform this action.
*/
type PostCohortsPatientListForbidden struct {
	Payload *PostCohortsPatientListForbiddenBody
}

func (o *PostCohortsPatientListForbidden) Error() string {
	return fmt.Sprintf("[POST /node/explore/cohorts/patient-list][%d] postCohortsPatientListForbidden  %+v", 403, o.Payload)
}

func (o *PostCohortsPatientListForbidden) GetPayload() *PostCohortsPatientListForbiddenBody {
	return o.Payload
}

func (o *PostCohortsPatientListForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostCohortsPatientListForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCohortsPatientListNotFound creates a PostCohortsPatientListNotFound with default headers values
func NewPostCohortsPatientListNotFound() *PostCohortsPatientListNotFound {
	return &PostCohortsPatientListNotFound{}
}

/*PostCohortsPatientListNotFound handles this case with default header values.

Not found.
*/
type PostCohortsPatientListNotFound struct {
	Payload *PostCohortsPatientListNotFoundBody
}

func (o *PostCohortsPatientListNotFound) Error() string {
	return fmt.Sprintf("[POST /node/explore/cohorts/patient-list][%d] postCohortsPatientListNotFound  %+v", 404, o.Payload)
}

func (o *PostCohortsPatientListNotFound) GetPayload() *PostCohortsPatientListNotFoundBody {
	return o.Payload
}

func (o *PostCohortsPatientListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostCohortsPatientListNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCohortsPatientListDefault creates a PostCohortsPatientListDefault with default headers values
func NewPostCohortsPatientListDefault(code int) *PostCohortsPatientListDefault {
	return &PostCohortsPatientListDefault{
		_statusCode: code,
	}
}

/*PostCohortsPatientListDefault handles this case with default header values.

Error response.
*/
type PostCohortsPatientListDefault struct {
	_statusCode int

	Payload *PostCohortsPatientListDefaultBody
}

// Code gets the status code for the post cohorts patient list default response
func (o *PostCohortsPatientListDefault) Code() int {
	return o._statusCode
}

func (o *PostCohortsPatientListDefault) Error() string {
	return fmt.Sprintf("[POST /node/explore/cohorts/patient-list][%d] postCohortsPatientList default  %+v", o._statusCode, o.Payload)
}

func (o *PostCohortsPatientListDefault) GetPayload() *PostCohortsPatientListDefaultBody {
	return o.Payload
}

func (o *PostCohortsPatientListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PostCohortsPatientListDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostCohortsPatientListBody post cohorts patient list body
swagger:model PostCohortsPatientListBody
*/
type PostCohortsPatientListBody struct {

	// cohort name
	// Required: true
	// Pattern: ^\w+$
	CohortName *string `json:"cohortName"`

	// id
	// Pattern: ^[\w:-]+$
	ID string `json:"id,omitempty"`

	// user public key
	// Required: true
	// Pattern: ^[\w=-]+$
	UserPublicKey *string `json:"userPublicKey"`
}

// Validate validates this post cohorts patient list body
func (o *PostCohortsPatientListBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCohortName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUserPublicKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCohortsPatientListBody) validateCohortName(formats strfmt.Registry) error {

	if err := validate.Required("cohortsPatientListRequest"+"."+"cohortName", "body", o.CohortName); err != nil {
		return err
	}

	if err := validate.Pattern("cohortsPatientListRequest"+"."+"cohortName", "body", string(*o.CohortName), `^\w+$`); err != nil {
		return err
	}

	return nil
}

func (o *PostCohortsPatientListBody) validateID(formats strfmt.Registry) error {

	if swag.IsZero(o.ID) { // not required
		return nil
	}

	if err := validate.Pattern("cohortsPatientListRequest"+"."+"id", "body", string(o.ID), `^[\w:-]+$`); err != nil {
		return err
	}

	return nil
}

func (o *PostCohortsPatientListBody) validateUserPublicKey(formats strfmt.Registry) error {

	if err := validate.Required("cohortsPatientListRequest"+"."+"userPublicKey", "body", o.UserPublicKey); err != nil {
		return err
	}

	if err := validate.Pattern("cohortsPatientListRequest"+"."+"userPublicKey", "body", string(*o.UserPublicKey), `^[\w=-]+$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCohortsPatientListBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCohortsPatientListBody) UnmarshalBinary(b []byte) error {
	var res PostCohortsPatientListBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCohortsPatientListDefaultBody post cohorts patient list default body
swagger:model PostCohortsPatientListDefaultBody
*/
type PostCohortsPatientListDefaultBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this post cohorts patient list default body
func (o *PostCohortsPatientListDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCohortsPatientListDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCohortsPatientListDefaultBody) UnmarshalBinary(b []byte) error {
	var res PostCohortsPatientListDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCohortsPatientListForbiddenBody post cohorts patient list forbidden body
swagger:model PostCohortsPatientListForbiddenBody
*/
type PostCohortsPatientListForbiddenBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this post cohorts patient list forbidden body
func (o *PostCohortsPatientListForbiddenBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCohortsPatientListForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCohortsPatientListForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PostCohortsPatientListForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCohortsPatientListNotFoundBody post cohorts patient list not found body
swagger:model PostCohortsPatientListNotFoundBody
*/
type PostCohortsPatientListNotFoundBody struct {

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this post cohorts patient list not found body
func (o *PostCohortsPatientListNotFoundBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostCohortsPatientListNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCohortsPatientListNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PostCohortsPatientListNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PostCohortsPatientListOKBody post cohorts patient list o k body
swagger:model PostCohortsPatientListOKBody
*/
type PostCohortsPatientListOKBody struct {

	// results
	Results []string `json:"results"`

	// timers
	Timers models.Timers `json:"timers"`
}

// Validate validates this post cohorts patient list o k body
func (o *PostCohortsPatientListOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTimers(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostCohortsPatientListOKBody) validateTimers(formats strfmt.Registry) error {

	if swag.IsZero(o.Timers) { // not required
		return nil
	}

	if err := o.Timers.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("postCohortsPatientListOK" + "." + "timers")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostCohortsPatientListOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostCohortsPatientListOKBody) UnmarshalBinary(b []byte) error {
	var res PostCohortsPatientListOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
