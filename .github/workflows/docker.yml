name: Docker
on:
  push:
    branches:
      - 'dev'
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

jobs:
  build-push:
    name: Build and push Docker images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

# todo: temporarily disabled
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ secrets.LDS_PKG_PAT_USERNAME }}
#          password: ${{ secrets.LDS_PKG_PAT }}

      - name: Get MedCo version
        id: versions
        run: |
          source scripts/versions.sh
          echo ::set-output name=MEDCO_VERSION::${MEDCO_VERSION}
          
          echo ::set-output name=MEDCO_DOCKER_TAG::${MEDCO_DOCKER_TAG}
          echo ::set-output name=I2B2_DOCKER_TAG::${I2B2_DOCKER_TAG}
          echo ::set-output name=KEYCLOAK_DOCKER_TAG::${KEYCLOAK_DOCKER_TAG}
          echo ::set-output name=WSTUNNEL_DOCKER_TAG::${WSTUNNEL_DOCKER_TAG}
          echo ::set-output name=NGINX_DOCKER_TAG::${NGINX_DOCKER_TAG}
          echo ::set-output name=PGADMIN_TAG::${PGADMIN_TAG}
          
          echo ::set-output name=GB_DOCKER_TAG::${GB_DOCKER_TAG}
          echo ::set-output name=PG_DOCKER_TAG::${PG_DOCKER_TAG}

      - name: Build and push medco
        uses: docker/build-push-action@v2
        with:
          file: ./build/package/medco/Dockerfile
          build-args: MEDCO_VERSION=${{ steps.versions.outputs.MEDCO_VERSION }}
          # todo: temporarily disabled
          # push: ${{ github.event_name != 'pull_request' }}
          push: false
          tags: ${{ steps.versions.outputs.MEDCO_DOCKER_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push wstunnel
        uses: docker/build-push-action@v2
        with:
          context: ./build/package/wstunnel/
          file: ./build/package/wstunnel/Dockerfile
          # todo: temporarily disabled
          # push: ${{ github.event_name != 'pull_request' }}
          push: false
          tags: ${{ steps.versions.outputs.WSTUNNEL_DOCKER_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push i2b2
        uses: docker/build-push-action@v2
        with:
          context: ./build/package/i2b2/
          file: ./build/package/i2b2/Dockerfile
          # todo: temporarily disabled
          # push: ${{ github.event_name != 'pull_request' }}
          push: false
          tags: ${{ steps.versions.outputs.I2B2_DOCKER_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push keycloak
        uses: docker/build-push-action@v2
        with:
          context: ./build/package/keycloak/
          file: ./build/package/keycloak/Dockerfile
          # todo: temporarily disabled
          # push: ${{ github.event_name != 'pull_request' }}
          push: false
          tags: ${{ steps.versions.outputs.KEYCLOAK_DOCKER_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push nginx
        uses: docker/build-push-action@v2
        with:
          context: ./build/package/nginx/
          file: ./build/package/nginx/Dockerfile
          # todo: temporarily disabled
          # push: ${{ github.event_name != 'pull_request' }}
          push: false
          tags: ${{ steps.versions.outputs.NGINX_DOCKER_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push pgadmin
        uses: docker/build-push-action@v2
        with:
          context: ./build/package/pgadmin/
          file: ./build/package/pgadmin/Dockerfile
          # todo: temporarily disabled
          # push: ${{ github.event_name != 'pull_request' }}
          push: false
          tags: ${{ steps.versions.outputs.PGADMIN_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
