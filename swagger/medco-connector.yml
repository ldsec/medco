swagger: "2.0"
info:
  description: "API of the MedCo connector, that orchestrates the query at the MedCo node and provides information about the MedCo network."
  version: "1.0.0"
  title: "MedCo Connector"
  contact:
    email: "medco-dev@listes.epfl.ch"
  license:
    name: "EULA"
    url: "https://raw.githubusercontent.com/ldsec/medco-connector/master/LICENSE"
basePath: "/medco"
tags:
  - name: "medco-network"
    description: "MedCo Network API"
  - name: "medco-node"
    description: "MedCo Node API"
  - name: "genomic-annotations"
    description: "Genomic Annotations Query API"
  - name : "survival-analysis"
    description : "Survival analysis API"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
externalDocs:
  description: "MedCo Technical Documentation"
  url: "https://medco.epfl.ch/documentation"
security:
  - medco-jwt: []

paths:
  /network:
    get:
      tags:
        - "medco-network"
      summary: "Get network metadata."
      operationId: "getMetadata"
      responses:
        200:
          $ref: "#/responses/networkMetadataResponse"
        default:
          $ref: "#/responses/errorResponse"
      security:
       - medco-jwt: ["medco-network"]


  /node/explore/search:
    post:
      tags:
        - "medco-node"
      summary: "Search through the ontology for MedCo-Explore query terms."
      operationId: "exploreSearch"
      parameters:
        - $ref: "#/parameters/exploreSearchRequest"
      responses:
        200:
          $ref: "#/responses/exploreSearchResponse"
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: ["medco-explore"]

  /node/explore/query:
    post:
      tags:
        - "medco-node"
      summary: "MedCo-Explore query to the node."
      operationId: "exploreQuery"
      parameters:
        - in: "query"
          name: "sync"
          description: "Request synchronous query (defaults to true)."
          type: "boolean"
          default: true
        - $ref: "#/parameters/exploreQueryRequest"
      responses:
        200:
          $ref: "#/responses/exploreQueryResponse"
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: ["medco-explore"]

  /node/explore/query/{queryId}:
    get:
      tags:
        - "medco-node"
      summary: "Get status and result of a MedCo-Explore query."
      operationId: "getExploreQuery"
      parameters:
        - in: "path"
          name: "queryId"
          description: "Query ID"
          required: true
          type: "string"
      responses:
        200:
          $ref: "#/responses/exploreQueryResponse"
        404:
          description: "Query ID not found."
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: ["medco-explore"]

  /genomic-annotations/{annotation}:
    get:
      tags:
        - "genomic-annotations"
      summary: "Get genomic annotations values."
      operationId: "getValues"
      parameters:
        - in: "path"
          name: "annotation"
          description: "Genomic annotation name."
          required: true
          type: "string"
          pattern: '^\w+$'
        - in: "query"
          name: "value"
          description: "Genomic annotation value."
          required: true
          type: "string"
          maxLength: 255
        - in: "query"
          name: "limit"
          description: "Limits the number of records retrieved."
          type: "integer"
          default: 10
          minimum: 0
      responses:
        200:
          description: "Queried annotation values."
          schema:
            type: "array"
            items:
              type: "string"
        404:
          description: "Annotation not found."
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: ["medco-genomic-annotations"]

  /genomic-annotations/{annotation}/{value}:
    get:
      tags:
        - "genomic-annotations"
      summary: "Get variants corresponding to a genomic annotation value."
      operationId: "getVariants"
      parameters:
        - in: "path"
          name: "annotation"
          description: "Genomic annotation name."
          required: true
          type: "string"
          pattern: '^\w+$'
        - in: "path"
          name: "value"
          description: "Genomic annotation value."
          required: true
          type: "string"
          minLength: 1
        - in: "query"
          name: "zygosity"
          description: "Genomic annotation zygosity, if null defaults to all."
          type: "array"
          items:
            type: "string"
            enum:
              - heterozygous
              - homozygous
              - unknown
        - in: "query"
          name: "encrypted"
          description: "Request pre-encrypted variant identifiers (defaults to true)."
          type: "boolean"
          default: true
      responses:
        200:
          description: "Queried variants."
          schema:
            type: "array"
            items:
              type: "string"
        404:
          description: "Annotation or annotation value not found."
        default:
          $ref: "#/responses/errorResponse"
      security:
        - medco-jwt: ["medco-genomic-annotations"]
  /survival-analysis:
    post :
      tags:
        - "survival-analysis"
      summary: "Send a query to run a survival analysis"
      operationId: "getSurvivalAnalysis"
      parameters:
      - in: "body"
        description: "User public key, patient list and time codes strings for the survival analysis"
        name: "body"
        schema:
          type: "object"
          properties:
            ID:
              type: "string"
            userPublicKey:
              $ref: "#/definitions/exploreQuery/properties/userPublicKey"
            patientSetID:
              type: "string"
            patientGroupIDs:
              type: "array"
              items:
                type: "string"
            timeCodes:
              type: "array"
              items:
                type: "string"
          


      responses:
        200:
          description: "Queried survival analysis"
          schema:
            type: "object"
            properties:
              results:
                type: "array"
                items:
                  type: "object"
                  properties:
                    groupID:
                      type: "string"
                    groupResults:
                      type : "array"
                      items:
                        type: "object"
                        properties:
                          timepoint:
                            type: "string"
                          events:
                            type: "object"
                            properties:
                              eventofinterest:
                                type: "string"
                              censoringevent:
                                type: "string"
              timers:
                type: "object"
                additionalProperties:
                  type: "number"

        404:
          description: "TODO not found"
        default:
          $ref: '#/responses/errorResponse'
      security:
        - medco-jwt: ["medco-survival-analysis"]

  /cohorts/retrieval:
    post:
      tags:
        - "cohortsRetrieval"
      summary: "Retrieve cohort names and patient set IDs"
      operationId: "postCohortsRetrieval"
      parameters:
        - in: "body"
          description: "User Public key"
          name: "body"
          schema:
            type: "object"
            properties:
              userPublicKey: 
                $ref: "#/definitions/exploreQuery/properties/userPublicKey"
      
      responses:
        200:
          description: "Queried cohorts"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                cohortName:
                  type: "string"
                patientSetID:
                  type: "string"
                creationDate:
                  type: "number"
                updateDate:
                  type: "number"
        403:
          description: "Not authorized"
        default:
          $ref: '#/responses/errorResponse'
        404:
          description: "User not found"
        default:
          $ref: '#/responses/errorResponse'
  /cohorts/update:
    post:
      tags:
        - "cohortsUpdate"
      summary: "Update cohorts list with a new or modified cohort"
      operationId: "postCohortsUpdate"
      parameters:
        - in: "body"
          description: "User Public key"
          name: "body"
          schema:
            type: "object"
            properties:
              cohort:
                type: "object"
                properties:
                  cohortName:
                    type: "string"
                  patientSetID:
                    type: "string"
                  creationDate:
                    type: "number"
                  updateDate:
                    type: "number"
              userPublicKey: #for most obscure reason, it is impossible to use reference as it has been used so far and after, throws an error here
                type: "string"
                pattern: '^[\w=-]+$'
       
      responses:
        200:
          description: "Updated cohorts"
          schema:
            type: "string"
        403:
          description: "Not authorized"
        default:
          $ref: '#/responses/errorResponse'
        404:
          description: "User not found"
        default:
          $ref: '#/responses/errorResponse'
        500:
          description: "DB has been updated since last importation"
        default:
          $ref: '#/responses/errorResponse'
  /cohorts/restoration:
    post:
      tags:
        - "cohortsRestoration"
      summary: "Returns the selection pannel of the cohorts"
      operationId: "postCohortsRestoration"
      parameters:
        - in: "body"
          description: "User Public key"
          name: "body"
          schema:
            type: "object"
            properties:
              userPublicKey: 
                $ref: "#/definitions/exploreQuery/properties/userPublicKey"
              cohortName:
                type: "string"
              cohortUpdateDate:
                type: "number"
      responses:
        200:
          description: "Restored panels"
          schema:
            $ref: "#/definitions/exploreQuery/properties/panels"
        403:
          description: "Not authorized"
        default:
          $ref: '#/responses/errorResponse'
        404:
          description: "User and/or cohort not found"
        default:
          $ref: '#/responses/errorResponse'
        500:
          description: "DB has been updated since last importation"
        default:
          $ref: '#/responses/errorResponse'
                   


securityDefinitions:
  medco-jwt:
    type: "oauth2"
    flow: "application"
    tokenUrl: "https://medco-demo.epfl.ch/auth"
    description: "MedCo JWT token."

parameters:
  exploreSearchRequest:
    in: "body"
    name: "searchRequest"
    description: "MedCo-Explore ontology search request."
    required: true
    schema:
      $ref: "#/definitions/exploreSearch"

  exploreQueryRequest:
    in: "body"
    name: "queryRequest"
    description: "MedCo-Explore query request."
    required: true
    schema:
      type: "object"
      properties:
        id:
          type: "string"
          pattern: '^[\w:-]+$'
        query:
          $ref: "#/definitions/exploreQuery"

responses:
  errorResponse:
    description: "Error response."
    schema:
      type: "object"
      properties:
        message:
          type: "string"

  networkMetadataResponse:
    description: "Network metadata (public key and nodes list)."
    schema:
      type: "object"
      required: [nodeIndex]
      properties:
        public-key:
          type: "string"
          description: "Aggregated public key of the collective authority."
        nodes:
          type: "array"
          items:
            type: "object"
            required: [index]
            properties:
              index:
                type: "integer"
              name:
                type: "string"
              url:
                type: "string"
        nodeIndex:
          type: "integer"

  exploreSearchResponse:
    description: "MedCo-Explore search query response."
    schema:
      type: "object"
      properties:
        search:
          $ref: "#/definitions/exploreSearch"
        results:
          type: "array"
          items:
            $ref: "#/definitions/exploreSearchResultElement"

  exploreQueryResponse:
    description: "MedCo-Explore query response."
    schema:
      type: "object"
      properties:
        id:
          type: "string"
        query:
          $ref: "#/definitions/exploreQuery"
        result:
          $ref: "#/definitions/exploreQueryResultElement"

definitions:
  exploreSearch:
    type: "object"
    required:
      - path
    properties:
      type:
        type: "string"
        enum:
          - children
          - metadata
      path:
        type: "string"
        pattern: '^\/$|^((\/[^\/]+)+\/?)$'

  exploreSearchResultElement:
    type: "object"
    required: [leaf]
    properties:
      path:
        type: "string"
      name:
        type: "string"
      displayName:
        type: "string"
      code:
        type: "string"
      type:
        type: "string"
        enum:
          - container
          - concept
          - concept_numeric
          - concept_enum
          - concept_text
          - genomic_annotation
      leaf:
        type: "boolean"
      medcoEncryption:
        type: "object"
        required: [encrypted, id]
        properties:
          encrypted:
            type: "boolean"
          id:
            type: "integer"
            format: "int64"
          childrenIds:
            type: "array"
            items:
              type: "integer"
              format: "int64"
      metadata:
        type: "object"

  exploreQuery:
    description: "MedCo-Explore query"
    properties:
      type:
        $ref: "#/definitions/exploreQueryType"
      differentialPrivacy:
        type: "object"
        description: "differential privacy query parameters (todo)"
        properties:
          queryBudget:
            type: "number"
            minimum: 0
            maximum: 0
      userPublicKey:
        type: "string"
        pattern: '^[\w=-]+$'
      panels:
        type: "array"
        description: "i2b2 panels (linked by an AND)"
        items:
          type: "object"
          required: [not]
          properties:
            not:
              type: "boolean"
              description: "exclude the i2b2 panel"
            items:
              type: "array"
              description: "i2b2 items (linked by an OR)"
              items:
                type: "object"
                required: [encrypted, queryTerm]
                properties:
                  queryTerm:
                    type: "string"
                    pattern: '^([\w=-]+)$|^((\/[^\/]+)+\/?)$'
                  operator:
                    type: "string"
                    enum:
                      - exists
                      - equals
                  value:
                    type: "string"
                    maxLength: 0
                  encrypted:
                    type: "boolean"

  exploreQueryType:
    type: "string"
    enum:
      - patient_list
      - count_per_site
      - count_per_site_obfuscated
      - count_per_site_shuffled
      - count_per_site_shuffled_obfuscated
      - count_global
      - count_global_obfuscated
      - patient_set

  exploreQueryResultElement:
    type: "object"
    properties:
      status:
        type: "string"
        enum:
          - queued
          - pending
          - error
          - available
      patientSetID:
        type: "string"
      encryptedCount:
        type: "string"
      encryptedPatientList:
        type: "array"
        items:
          type: "string"
      timers:
        type: "array"
        items:
          type: "object"
          required: [milliseconds]
          properties:
            name:
              type: "string"
            milliseconds:
              type: "integer"
              format: "int64"

  restApiAuthorization:
    type: "string"
    enum:
      - medco-network
      - medco-explore
      - medco-genomic-annotations
      - medco-survival-analysis

  user:
    type: "object"
    properties:
      id:
        type: "string"
      token:
        type: "string"
      authorizations:
        type: "object"
        properties:
          restApi:
            type: "array"
            items:
              $ref: "#/definitions/restApiAuthorization"
          exploreQuery:
            type: "array"
            items:
              $ref: "#/definitions/exploreQueryType"
