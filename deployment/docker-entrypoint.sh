#!/usr/bin/env bash
set -Eeuo pipefail

if [[ "$1" = "medco-connector-server" ]]; then
# trust the certificates of other nodes
if [[ `ls -1 /medco-configuration/srv*-certificate.crt 2>/dev/null | wc -l` != 0 ]]; then
    /bin/cp -f /medco-configuration/srv*-certificate.crt /usr/local/share/ca-certificates/
    update-ca-certificates
fi

# wait for postgres to be available
export SCHEMA="query_tools"
export PGPASSWORD="$MC_DB_PW"
export PSQL_PARAMS="-v ON_ERROR_STOP=1 -h ${MC_DB_HOST} -p ${MC_DB_PORT} -U ${MC_DB_USER}"
until psql $PSQL_PARAMS -d postgres -c '\q'; do
  >&2 echo "Waiting for postgresql..."
  sleep 1
done

# initialize database if it does not exist (credentials must be valid and have create database right)
DB_CHECK=$(psql ${PSQL_PARAMS} -d postgres -X -A -t -c "select count(*) from pg_database where datname = '${MC_DB_NAME}';")
if [[ "$DB_CHECK" -ne "1" ]]; then
echo "Initialising medco connector database"
psql $PSQL_PARAMS -d postgres <<-EOSQL
    CREATE DATABASE ${MC_DB_NAME};
EOSQL
psql $PSQL_PARAMS -d "$MC_DB_NAME" <<-EOSQL
      CREATE SCHEMA genomic_annotations;
      CREATE SCHEMA "${SCHEMA}";
EOSQL
fi

#create the enum type
psql $PSQL_PARAMS -d "$MC_DB_NAME" <<-EOSQL
DO
\$\$
BEGIN
IF  NOT EXISTS (SELECT * FROM pg_type where typname='status_enum') AS type_count  THEN
CREATE TYPE status_enum AS ENUM ('running','completed','error');
END IF;
END
\$\$
EOSQL

#create explore query results
psql $PSQL_PARAMS -d "$MC_DB_NAME" <<-EOSQL
CREATE TABLE IF NOT EXISTS "${SCHEMA}".explore_query_results
(
    query_id serial NOT NULL,
    query_name character varying(255) NOT NULL,
    user_id character varying(255) NOT NULL,
    query_status status_enum  NOT  NULL,
    clear_result_set_size integer,
    clear_result_set integer[],
    query_definition text,
    i2b2_encrypted_patient_set_id integer,
    i2b2_non_encrypted_patient_set_id integer,
    PRIMARY KEY (query_id),
    UNIQUE (query_name)

)
EOSQL

#create cohorts table
psql $PSQL_PARAMS -d "$MC_DB_NAME"<<-EOSQL
CREATE TABLE IF NOT EXISTS "${SCHEMA}".saved_cohorts
(
    cohort_id serial NOT NULL,
    user_id character varying(255) NOT NULL,
    cohort_name character varying(255) NOT NULL,
    query_id INTEGER NOT  NULL,
    create_date TIMESTAMP WITHOUT TIME ZONE,
    update_date TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT saved_cohorts_pkey PRIMARY KEY (cohort_id),
    CONSTRAINT saved_cohorts_user_id_cohort_name_key UNIQUE (user_id, cohort_name),
    CONSTRAINT query_tool_fk_psc_ri FOREIGN KEY (query_id)
        REFERENCES "${SCHEMA}".explore_query_results (query_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

EOSQL

#for e2e test


psql $PSQL_PARAMS -d "$MC_DB_NAME" <<-EOSQL


INSERT INTO query_tools.explore_query_results(
        query_id, query_name, user_id, query_status, clear_result_set_size, clear_result_set, query_definition, i2b2_encrypted_patient_set_id, i2b2_non_encrypted_patient_set_id)
        VALUES (-1, 'SurvivalE2ETest', 'test', 'completed', 228,'{1000001137,1000001138,1000001139,1000001140,1000001141,1000001142,1000001143,1000001144,1000001145,1000001146,1000001147,1000001148,1000001149,1000001150,1000001151,1000001152,1000001153,1000001154,1000001155,1000001156,1000001157,1000001158,1000001159,1000001160,1000001161,1000001162,1000001163,1000001164,1000001165,1000001166,1000001167,1000001168,1000001169,1000001170,1000001171,1000001172,1000001173,1000001174,1000001175,1000001176,1000001177,1000001178,1000001179,1000001180,1000001181,1000001182,1000001183,1000001184,1000001185,1000001186,1000001187,1000001188,1000001189,1000001190,1000001191,1000001192,1000001193,1000001194,1000001195,1000001196,1000001197,1000001198,1000001199,1000001200,1000001201,1000001202,1000001203,1000001204,1000001205,1000001206,1000001207,1000001208,1000001209,1000001210,1000001211,1000001212,1000001213,1000001214,1000001215,1000001216,1000001217,1000001218,1000001219,1000001220,1000001221,1000001222,1000001223,1000001224,1000001225,1000001226,1000001227,1000001228,1000001229,1000001230,1000001231,1000001232,1000001233,1000001234,1000001235,1000001236,1000001237,1000001238,1000001239,1000001240,1000001241,1000001242,1000001243,1000001244,1000001245,1000001246,1000001247,1000001248,1000001249,1000001250,1000001251,1000001252,1000001253,1000001254,1000001255,1000001256,1000001257,1000001258,1000001259,1000001260,1000001261,1000001262,1000001263,1000001264,1000001265,1000001266,1000001267,1000001268,1000001269,1000001270,1000001271,1000001272,1000001273,1000001274,1000001275,1000001276,1000001277,1000001278,1000001279,1000001280,1000001281,1000001282,1000001283,1000001284,1000001285,1000001286,1000001287,1000001288,1000001289,1000001290,1000001291,1000001292,1000001293,1000001294,1000001295,1000001296,1000001297,1000001298,1000001299,1000001300,1000001301,1000001302,1000001303,1000001304,1000001305,1000001306,1000001307,1000001308,1000001309,1000001310,1000001311,1000001312,1000001313,1000001314,1000001315,1000001316,1000001317,1000001318,1000001319,1000001320,1000001321,1000001322,1000001323,1000001324,1000001325,1000001326,1000001327,1000001328,1000001329,1000001330,1000001331,1000001332,1000001333,1000001334,1000001335,1000001336,1000001337,1000001338,1000001339,1000001340,1000001341,1000001342,1000001343,1000001344,1000001345,1000001346,1000001347,1000001348,1000001349,1000001350,1000001351,1000001352,1000001353,1000001354,1000001355,1000001356,1000001357,1000001358,1000001359,1000001360,1000001361,1000001362,1000001363,1000001364}', 'This field normally contains the selection panels', -1, -1)
        ON CONFLICT DO NOTHING;
EOSQL




#Load test cohort

psql $PSQL_PARAMS -d "$MC_DB_NAME" <<-EOSQL

INSERT INTO query_tools.saved_cohorts(
cohort_id, user_id, cohort_name, query_id, create_date, update_date)
VALUES (-1, 'test', 'testCohort', -1, '2020-08-25 13:57:00', '2020-08-25 13:57:00')
ON CONFLICT DO NOTHING;

EOSQL




fi


exec $@

